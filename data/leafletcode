<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Networking the Revolution Map</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.Default.css" />
    <style>
        #map { height: 600px; width: 100%; }
    </style>
</head>
<body>

<h3>Networking the Revolution Map</h3>
<div id="map"></div>

<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet.markercluster/dist/leaflet.markercluster.js"></script>
<script>
    // Initialize the map centered on an approximate location
    var map = L.map('map').setView([52.0, -0.1], 5);

    // Add OpenStreetMap tile layer
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    // Marker cluster group
    var markerCluster = L.markerClusterGroup();

    // Fetch data from JSON
    fetch('data/networkdata.json')
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            console.log(data); // Check data structure

            data.forEach(function(row) {
                var fromCoords = row.From.split(',').map(Number);
                var toCoords = row.To.split(',').map(Number);

                // Create popups
                var fromPopup = "ID: " + row.ID + "<br>Sender: " + row.Sender;
                var toPopup = "ID: " + row.ID + "<br>Receiver: " + row.Reciever;

                // Create markers
                var fromMarker = L.marker(fromCoords).bindPopup(fromPopup);
                var toMarker = L.marker(toCoords).bindPopup(toPopup);

                // Add markers to the cluster
                markerCluster.addLayer(fromMarker);
                markerCluster.addLayer(toMarker);

                // Add polyline between the two points
                L.polyline([fromCoords, toCoords], { color: 'red', weight: 2 }).addTo(map);
            });

            // Add the marker cluster group to the map
            map.addLayer(markerCluster);
            map.fitBounds(markerCluster.getBounds()); // Adjust map view to show all markers
        })
        .catch(error => console.error("Error loading JSON:", error));
</script>

</body>
</html>
